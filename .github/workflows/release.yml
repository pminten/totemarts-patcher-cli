# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Release

on:
  push:
    tags:
      # Build on every tag in the form v1.2.3-something.4
      - "v*"

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      # There's no easy way around installing this fresh every time.
      # With a build once per tag however it shouldn't be a major issue.
      - name: Install go-licenses
        run: go install github.com/google/go-licenses@v1.6.0

      - name: Build release
        run: pwsh ./release.ps1

      - name: Test
        run: go test -v ./...

      - name: Release artifact
        uses: actions/upload-artifact@v3
        with:
          name: TA-Patcher-Win
          path: |
            tapatcher.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Install go-licenses
        run: go install github.com/google/go-licenses@v1.6.0

      - name: Build release
        run: pwsh ./release.ps1

      - name: Test
        run: go test -v ./...

      - name: Release artifact
        uses: actions/upload-artifact@v3
        with:
          name: TA-Patcher-Linux
          path: |
            tapatcher

  release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux]

    steps:
      - name: Collect Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: TA-Patcher-Win

      - name: Collect Linux artifact
        uses: actions/download-artifact@v3
        with:
          name: TA-Patcher-Linux

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          fail_on_unmatched_files: true
          prerelease: ${{ contains(github.ref, '-beta') }}
          files: |
            tapatcher.exe
            tapatcher
